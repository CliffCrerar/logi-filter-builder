{"remainingRequest":"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/src/index.js","dependencies":[{"path":"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/src/index.js","mtime":1542192593906},{"path":"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/src/index.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport ConditionLine from \"./ConditionLine\";\nimport { operandTypes, operatorTypes } from \"./Settings\";\nimport { MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      flexDirection: \"column\"\n    },\n    conditionSection: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    button: {//margin: theme.spacing.unit / 2\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\n\nvar LogiFilterBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogiFilterBuilder, _Component);\n\n  function LogiFilterBuilder(props) {\n    var _this;\n\n    _classCallCheck(this, LogiFilterBuilder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogiFilterBuilder).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    if (props.preLoadConditions) {\n      _this.state = {\n        Error: false,\n        conditions: props.preLoadConditions\n      };\n    } else {\n      _this.state = {\n        conditions: [{\n          Error: false,\n          type: \"Simple\",\n          column: undefined,\n          operator: undefined,\n          value: undefined,\n          operand: operandTypes.get(\"AND\")\n        }]\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(LogiFilterBuilder, [{\n    key: \"addNewCondition\",\n    value: function addNewCondition() {\n      var conditions = _toConsumableArray(this.state.conditions);\n\n      conditions.push({\n        type: \"Simple\",\n        column: undefined,\n        operator: undefined,\n        value: undefined,\n        operand: operandTypes.get(\"AND\")\n      });\n      this.validateAndCreate(conditions);\n    }\n  }, {\n    key: \"addNewNestedCondition\",\n    value: function addNewNestedCondition() {\n      var conditions = _toConsumableArray(this.state.conditions); // @ts-ignore\n\n\n      conditions.push({\n        type: \"Nested\",\n        conditions: [{\n          type: \"Simple\",\n          column: undefined,\n          operator: undefined,\n          value: undefined,\n          operand: operandTypes.get(\"AND\")\n        }],\n        operand: operandTypes.get(\"AND\")\n      });\n      this.validateAndCreate(conditions);\n    }\n  }, {\n    key: \"removeCondition\",\n    value: function removeCondition(conditionIndex) {\n      var conditions = _toConsumableArray(this.state.conditions);\n\n      conditions.splice(conditionIndex, 1);\n\n      if (conditions.length > 0) {\n        this.validateAndCreate(conditions);\n      } //case user remove the last condition => we'll add one empty condition\n      else {\n          this.validateAndCreate([{\n            type: \"Simple\",\n            column: undefined,\n            operator: undefined,\n            value: undefined,\n            operand: operandTypes.get(\"AND\")\n          }]);\n        }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(selectedColumn, index, value, changeType) {\n      var translateValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n      var conditions = _toConsumableArray(this.state.conditions);\n\n      var condition;\n      if (changeType === \"column\") condition = _objectSpread({}, selectedColumn, {\n        column: this.props.columns.filter(function (c) {\n          return c.header === value;\n        })[0]\n      });else if (changeType === \"operator\") condition = _objectSpread({}, selectedColumn, {\n        operator: operatorTypes.get(selectedColumn.column.dataType).filter(function (opt) {\n          return opt.Label === value;\n        })[0]\n      });else if (changeType === \"value\") condition = _objectSpread({}, selectedColumn, {\n        value: {\n          value: value,\n          translateValue: translateValue\n        }\n      });else if (changeType === \"operand\") condition = _objectSpread({}, selectedColumn, {\n        operand: operandTypes.get(value)\n      });\n      conditions[index] = condition;\n      this.validateAndCreate(conditions);\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(conditions) {\n      var _this2 = this;\n\n      var isValid = true;\n      var filter = \"\";\n      var index = 0;\n      conditions.forEach(function (c) {\n        if (c.type === \"Simple\") {\n          isValid = isValid && c.column && c.column.accessor && c.operator && c.operator.TranslateTo && c.value && c.value.translateValue !== undefined && c.value.value !== undefined && c.value.value !== \"\";\n\n          if (isValid) {\n            filter = filter + \"\".concat(c.column.accessor, \" \").concat(c.operator.TranslateTo, \" \").concat(c.value.translateValue, \" \").concat(index + 1 < conditions.length ? c.operand.TranslateTo : \"\");\n          }\n        } else {\n          var returnedObj = _this2.validate(c.conditions);\n\n          isValid = isValid && returnedObj.isValid;\n          filter = filter + \" (  \".concat(returnedObj.filter, \" )  \").concat(index + 1 < conditions.length ? c.operand.TranslateTo : \"\");\n        }\n\n        index++;\n      });\n      return {\n        isValid: isValid,\n        filter: filter\n      };\n    }\n  }, {\n    key: \"validateAndCreate\",\n    value: function validateAndCreate(conditions) {\n      //validate\n      var _this$validate = this.validate(conditions),\n          isValid = _this$validate.isValid,\n          filter = _this$validate.filter; //console.log(isValid);\n\n\n      this.setState({\n        Error: !isValid,\n        //\"Please fix errors highlighted red and try again\",\n        conditions: conditions,\n        filterStatement: filter\n      }); //in case of nested changes this will update the parent conditions\n\n      if (this.props.onChange) {\n        this.props.onChange(conditions);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          columns = _this$props.columns;\n      return React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(ExpansionPanel, {\n        defaultExpanded: this.props.startExpanded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, this.state.Error ? \"Please fix errors\" : this.state.filterStatement ? this.state.filterStatement : this.props.header ? this.props.header : \"Create Filter\")), React.createElement(ExpansionPanelDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, this.state.conditions.map(function (condition, index) {\n        return React.createElement(\"section\", {\n          key: index,\n          className: classes.conditionSection,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, condition.type === \"Simple\" ? React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(ConditionLine, {\n          key: index,\n          classes: classes,\n          condition: condition,\n          index: index,\n          handleChange: _this3.handleChange,\n          columns: columns,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }), condition.operator && index + 1 < _this3.state.conditions.length ? React.createElement(FormControl, {\n          className: classes.formControl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(Select, {\n          value: condition.operand.Label //default must be AND\n          ,\n          onChange: function onChange(e) {\n            return _this3.handleChange(condition, index, e.target.value, \"operand\");\n          },\n          inputProps: {\n            name: \"operand\",\n            id: \"operand-select\"\n          },\n          native: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, Array.from(operandTypes.values()).map(function (operand) {\n          return React.createElement(\"option\", {\n            value: operand.Label,\n            key: operand.Label,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269\n            },\n            __self: this\n          }, operand.Label);\n        }))) : null) : React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, React.createElement(LogiFilterBuilder, {\n          columns: columns,\n          classes: classes,\n          preLoadConditions: condition.conditions,\n          onChange: function onChange(newInnerConditions) {\n            //on purpose doing it like this to avoid re render (?!)\n            _this3.state.conditions[index].conditions = newInnerConditions;\n\n            _this3.validateAndCreate(_this3.state.conditions);\n          },\n          isNested: true,\n          header: \"Nested Condition\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }), index + 1 < _this3.state.conditions.length ? React.createElement(FormControl, {\n          className: classes.formControl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, React.createElement(Select, {\n          value: condition.operand.Label //default must be AND\n          ,\n          onChange: function onChange(e) {\n            return _this3.handleChange(condition, index, e.target.value, \"operand\");\n          },\n          inputProps: {\n            name: \"operand\",\n            id: \"operand-select\"\n          },\n          native: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, Array.from(operandTypes.values()).map(function (operand) {\n          return React.createElement(\"option\", {\n            value: operand.Label,\n            key: operand.Label,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321\n            },\n            __self: this\n          }, operand.Label);\n        }))) : null), React.createElement(Button, {\n          variant: \"outlined\",\n          \"aria-label\": \"Remove\",\n          className: classes.button,\n          onClick: function onClick() {\n            _this3.removeCondition(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, \"-\"));\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }), React.createElement(ExpansionPanelActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outlined\",\n        \"aria-label\": \"AddNested\",\n        className: classes.button,\n        onClick: function onClick() {\n          _this3.addNewNestedCondition();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"+()\"), React.createElement(Button, {\n        variant: \"outlined\",\n        \"aria-label\": \"Add\",\n        className: classes.button,\n        onClick: function onClick() {\n          _this3.addNewCondition();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"+\"), !this.props.isNested && React.createElement(Button, {\n        disabled: this.state.Error,\n        variant: \"outlined\",\n        onClick: function onClick() {\n          return _this3.props.getFilterStatement(_this3.state.filterStatement);\n        },\n        size: \"small\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, \"Apply\"))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return LogiFilterBuilder;\n}(Component);\n\nLogiFilterBuilder.propTypes = {\n  /** Array of Objects defining columns\n   * {header, accessor, dataType, isReadOnly, isHidden}*/\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    header: PropTypes.string.isRequired,\n    accessor: PropTypes.string.isRequired,\n    dataType: PropTypes.oneOf([\"String\", \"Number\", \"Date\", \"DateTime\", \"Time\", \"Boolean\"]),\n    isHidden: PropTypes.bool //if not available will be shown\n\n  })).isRequired,\n\n  /** Text instead of \"Create Filter\" being used for nested filters internally */\n  header: PropTypes.string,\n\n  /** Clicking on Apply will call this function and return the created filter (Where clause) */\n  getFilterStatement: PropTypes.func,\n\n  /** Send true if you want the expansion panel to be open */\n  startExpanded: PropTypes.bool\n};\nLogiFilterBuilder.defaultProps = {\n  startExpanded: false\n}; //exporting like this so Docz will pick the props!\n\nvar _default = LogiFilterBuilder = withStyles(styles, {\n  withTheme: true\n})(LogiFilterBuilder);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(styles, \"styles\", \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/src/index.js\");\n  reactHotLoader.register(LogiFilterBuilder, \"LogiFilterBuilder\", \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/src/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/src/index.js\");\n  leaveModule(module);\n})();\n\n;\nLogiFilterBuilder.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"addNewCondition\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"addNewNestedCondition\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"removeCondition\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"conditionIndex\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"selectedColumn\",\n      \"type\": null\n    }, {\n      \"name\": \"index\",\n      \"type\": null\n    }, {\n      \"name\": \"value\",\n      \"type\": null\n    }, {\n      \"name\": \"changeType\",\n      \"type\": null\n    }, {\n      \"name\": \"translateValue\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"validate\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"conditions\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"validateAndCreate\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"conditions\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"LogiFilterBuilder\",\n  \"props\": {\n    \"startExpanded\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Send true if you want the expansion panel to be open\"\n    },\n    \"columns\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"header\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"accessor\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"dataType\": {\n              \"name\": \"enum\",\n              \"value\": [{\n                \"value\": \"\\\"String\\\"\",\n                \"computed\": false\n              }, {\n                \"value\": \"\\\"Number\\\"\",\n                \"computed\": false\n              }, {\n                \"value\": \"\\\"Date\\\"\",\n                \"computed\": false\n              }, {\n                \"value\": \"\\\"DateTime\\\"\",\n                \"computed\": false\n              }, {\n                \"value\": \"\\\"Time\\\"\",\n                \"computed\": false\n              }, {\n                \"value\": \"\\\"Boolean\\\"\",\n                \"computed\": false\n              }],\n              \"required\": false\n            },\n            \"isHidden\": {\n              \"name\": \"bool\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"Array of Objects defining columns\\n{header, accessor, dataType, isReadOnly, isHidden}\"\n    },\n    \"header\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Text instead of \\\"Create Filter\\\" being used for nested filters internally\"\n    },\n    \"getFilterStatement\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Clicking on Apply will call this function and return the created filter (Where clause)\"\n    }\n  }\n};",{"version":3,"sources":["/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/src/index.js"],"names":["Button","Divider","ExpansionPanel","ExpansionPanelActions","ExpansionPanelDetails","ExpansionPanelSummary","FormControl","Select","withStyles","Typography","ExpandMoreIcon","PropTypes","React","Component","ConditionLine","operandTypes","operatorTypes","MuiPickersUtilsProvider","DateFnsUtils","styles","theme","root","display","flexWrap","flexDirection","conditionSection","alignItems","button","formControl","margin","spacing","unit","minWidth","textField","marginLeft","marginRight","width","heading","fontSize","typography","pxToRem","LogiFilterBuilder","props","handleChange","bind","preLoadConditions","state","Error","conditions","type","column","undefined","operator","value","operand","get","push","validateAndCreate","conditionIndex","splice","length","selectedColumn","index","changeType","translateValue","condition","columns","filter","c","header","dataType","opt","Label","isValid","forEach","accessor","TranslateTo","returnedObj","validate","setState","filterStatement","onChange","classes","startExpanded","map","e","target","name","id","Array","from","values","newInnerConditions","removeCondition","addNewNestedCondition","addNewCondition","isNested","getFilterStatement","propTypes","arrayOf","shape","string","isRequired","oneOf","isHidden","bool","func","defaultProps","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,YAA5C;AACA,SAASC,uBAAT,QAAwC,qBAAxC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,QAAQ,EAAE,MAFN;AAGJC,MAAAA,aAAa,EAAE;AAHX,KADiB;AAMvBC,IAAAA,gBAAgB,EAAE;AAChBH,MAAAA,OAAO,EAAE,MADO;AAEhBC,MAAAA,QAAQ,EAAE,MAFM;AAGhBC,MAAAA,aAAa,EAAE,KAHC;AAIhBE,MAAAA,UAAU,EAAE;AAJI,KANK;AAYvBC,IAAAA,MAAM,EAAE,CACN;AADM,KAZe;AAevBC,IAAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAET,KAAK,CAACU,OAAN,CAAcC,IADX;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAfU;AAmBvBC,IAAAA,SAAS,EAAE;AACTC,MAAAA,UAAU,EAAEd,KAAK,CAACU,OAAN,CAAcC,IADjB;AAETI,MAAAA,WAAW,EAAEf,KAAK,CAACU,OAAN,CAAcC,IAFlB;AAGTK,MAAAA,KAAK,EAAE;AAHE,KAnBY;AAwBvBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAElB,KAAK,CAACmB,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB;AADH;AAxBc,GAAL;AAAA,CAApB;;IA6BMC,iB;;;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;;AACA,QAAIF,KAAK,CAACG,iBAAV,EAA6B;AAC3B,YAAKC,KAAL,GAAa;AACXC,QAAAA,KAAK,EAAE,KADI;AAEXC,QAAAA,UAAU,EAAEN,KAAK,CAACG;AAFP,OAAb;AAID,KALD,MAKO;AACL,YAAKC,KAAL,GAAa;AACXE,QAAAA,UAAU,EAAE,CACV;AACED,UAAAA,KAAK,EAAE,KADT;AAEEE,UAAAA,IAAI,EAAE,QAFR;AAGEC,UAAAA,MAAM,EAAEC,SAHV;AAIEC,UAAAA,QAAQ,EAAED,SAJZ;AAKEE,UAAAA,KAAK,EAAEF,SALT;AAMEG,UAAAA,OAAO,EAAEvC,YAAY,CAACwC,GAAb,CAAiB,KAAjB;AANX,SADU;AADD,OAAb;AAYD;;AArBgB;AAsBlB;;;;sCAEiB;AAChB,UAAIP,UAAU,sBAAO,KAAKF,KAAL,CAAWE,UAAlB,CAAd;;AACAA,MAAAA,UAAU,CAACQ,IAAX,CAAgB;AACdP,QAAAA,IAAI,EAAE,QADQ;AAEdC,QAAAA,MAAM,EAAEC,SAFM;AAGdC,QAAAA,QAAQ,EAAED,SAHI;AAIdE,QAAAA,KAAK,EAAEF,SAJO;AAKdG,QAAAA,OAAO,EAAEvC,YAAY,CAACwC,GAAb,CAAiB,KAAjB;AALK,OAAhB;AAOA,WAAKE,iBAAL,CAAuBT,UAAvB;AACD;;;4CAEuB;AACtB,UAAIA,UAAU,sBAAO,KAAKF,KAAL,CAAWE,UAAlB,CAAd,CADsB,CAEtB;;;AACAA,MAAAA,UAAU,CAACQ,IAAX,CAAgB;AACdP,QAAAA,IAAI,EAAE,QADQ;AAEdD,QAAAA,UAAU,EAAE,CACV;AACEC,UAAAA,IAAI,EAAE,QADR;AAEEC,UAAAA,MAAM,EAAEC,SAFV;AAGEC,UAAAA,QAAQ,EAAED,SAHZ;AAIEE,UAAAA,KAAK,EAAEF,SAJT;AAKEG,UAAAA,OAAO,EAAEvC,YAAY,CAACwC,GAAb,CAAiB,KAAjB;AALX,SADU,CAFE;AAWdD,QAAAA,OAAO,EAAEvC,YAAY,CAACwC,GAAb,CAAiB,KAAjB;AAXK,OAAhB;AAaA,WAAKE,iBAAL,CAAuBT,UAAvB;AACD;;;oCAEeU,c,EAAgB;AAC9B,UAAIV,UAAU,sBAAO,KAAKF,KAAL,CAAWE,UAAlB,CAAd;;AACAA,MAAAA,UAAU,CAACW,MAAX,CAAkBD,cAAlB,EAAkC,CAAlC;;AACA,UAAIV,UAAU,CAACY,MAAX,GAAoB,CAAxB,EAA2B;AACzB,aAAKH,iBAAL,CAAuBT,UAAvB;AACD,OAFD,CAEE;AAFF,WAGK;AACH,eAAKS,iBAAL,CAAuB,CACrB;AACER,YAAAA,IAAI,EAAE,QADR;AAEEC,YAAAA,MAAM,EAAEC,SAFV;AAGEC,YAAAA,QAAQ,EAAED,SAHZ;AAIEE,YAAAA,KAAK,EAAEF,SAJT;AAKEG,YAAAA,OAAO,EAAEvC,YAAY,CAACwC,GAAb,CAAiB,KAAjB;AALX,WADqB,CAAvB;AASD;AACF;;;iCAGCM,c,EACAC,K,EACAT,K,EACAU,U,EAEA;AAAA,UADAC,cACA,uEADiB,IACjB;;AACA,UAAIhB,UAAU,sBAAO,KAAKF,KAAL,CAAWE,UAAlB,CAAd;;AACA,UAAIiB,SAAJ;AACA,UAAIF,UAAU,KAAK,QAAnB,EACEE,SAAS,qBACJJ,cADI;AAEPX,QAAAA,MAAM,EAAE,KAAKR,KAAL,CAAWwB,OAAX,CAAmBC,MAAnB,CAA0B,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,MAAF,KAAahB,KAAjB;AAAA,SAA3B,EAAmD,CAAnD;AAFD,QAAT,CADF,KAKK,IAAIU,UAAU,KAAK,UAAnB,EACHE,SAAS,qBACJJ,cADI;AAEPT,QAAAA,QAAQ,EAAEpC,aAAa,CACpBuC,GADO,CACHM,cAAc,CAACX,MAAf,CAAsBoB,QADnB,EAEPH,MAFO,CAEA,UAAAI,GAAG;AAAA,iBAAIA,GAAG,CAACC,KAAJ,KAAcnB,KAAlB;AAAA,SAFH,EAE4B,CAF5B;AAFH,QAAT,CADG,KAOA,IAAIU,UAAU,KAAK,OAAnB,EACHE,SAAS,qBACJJ,cADI;AAEPR,QAAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAEA,KAAT;AAAgBW,UAAAA,cAAc,EAAEA;AAAhC;AAFA,QAAT,CADG,KAKA,IAAID,UAAU,KAAK,SAAnB,EACHE,SAAS,qBACJJ,cADI;AAEPP,QAAAA,OAAO,EAAEvC,YAAY,CAACwC,GAAb,CAAiBF,KAAjB;AAFF,QAAT;AAIFL,MAAAA,UAAU,CAACc,KAAD,CAAV,GAAoBG,SAApB;AACA,WAAKR,iBAAL,CAAuBT,UAAvB;AACD;;;6BAEQA,U,EAAY;AAAA;;AACnB,UAAIyB,OAAO,GAAG,IAAd;AACA,UAAIN,MAAM,GAAG,EAAb;AACA,UAAIL,KAAK,GAAG,CAAZ;AACAd,MAAAA,UAAU,CAAC0B,OAAX,CAAmB,UAAAN,CAAC,EAAI;AACtB,YAAIA,CAAC,CAACnB,IAAF,KAAW,QAAf,EAAyB;AACvBwB,UAAAA,OAAO,GACLA,OAAO,IACNL,CAAC,CAAClB,MAAF,IACCkB,CAAC,CAAClB,MAAF,CAASyB,QADV,IAECP,CAAC,CAAChB,QAFH,IAGCgB,CAAC,CAAChB,QAAF,CAAWwB,WAHZ,IAICR,CAAC,CAACf,KAJH,IAKCe,CAAC,CAACf,KAAF,CAAQW,cAAR,KAA2Bb,SAL5B,IAMCiB,CAAC,CAACf,KAAF,CAAQA,KAAR,KAAkBF,SANnB,IAOCiB,CAAC,CAACf,KAAF,CAAQA,KAAR,KAAkB,EATtB;;AAWA,cAAIoB,OAAJ,EAAa;AACXN,YAAAA,MAAM,GACJA,MAAM,aACHC,CAAC,CAAClB,MAAF,CAASyB,QADN,cACkBP,CAAC,CAAChB,QAAF,CAAWwB,WAD7B,cAEJR,CAAC,CAACf,KAAF,CAAQW,cAFJ,cAGFF,KAAK,GAAG,CAAR,GAAYd,UAAU,CAACY,MAAvB,GAAgCQ,CAAC,CAACd,OAAF,CAAUsB,WAA1C,GAAwD,EAHtD,CADR;AAKD;AACF,SAnBD,MAmBO;AACL,cAAIC,WAAW,GAAG,MAAI,CAACC,QAAL,CAAcV,CAAC,CAACpB,UAAhB,CAAlB;;AACAyB,UAAAA,OAAO,GAAGA,OAAO,IAAII,WAAW,CAACJ,OAAjC;AACAN,UAAAA,MAAM,GACJA,MAAM,iBACCU,WAAW,CAACV,MADb,iBAEJL,KAAK,GAAG,CAAR,GAAYd,UAAU,CAACY,MAAvB,GAAgCQ,CAAC,CAACd,OAAF,CAAUsB,WAA1C,GAAwD,EAFpD,CADR;AAKD;;AACDd,QAAAA,KAAK;AACN,OA9BD;AA+BA,aAAO;AAAEW,QAAAA,OAAO,EAAPA,OAAF;AAAWN,QAAAA,MAAM,EAANA;AAAX,OAAP;AACD;;;sCAEiBnB,U,EAAY;AAC5B;AAD4B,2BAEF,KAAK8B,QAAL,CAAc9B,UAAd,CAFE;AAAA,UAEtByB,OAFsB,kBAEtBA,OAFsB;AAAA,UAEbN,MAFa,kBAEbA,MAFa,EAG5B;;;AAEA,WAAKY,QAAL,CAAc;AACZhC,QAAAA,KAAK,EAAE,CAAC0B,OADI;AACK;AACjBzB,QAAAA,UAAU,EAAVA,UAFY;AAGZgC,QAAAA,eAAe,EAAEb;AAHL,OAAd,EAL4B,CAW5B;;AACA,UAAI,KAAKzB,KAAL,CAAWuC,QAAf,EAAyB;AACvB,aAAKvC,KAAL,CAAWuC,QAAX,CAAoBjC,UAApB;AACD;AACF;;;6BAEQ;AAAA;;AAAA,wBACoB,KAAKN,KADzB;AAAA,UACDwC,OADC,eACDA,OADC;AAAA,UACQhB,OADR,eACQA,OADR;AAGP,aACE,oBAAC,uBAAD;AAAyB,QAAA,KAAK,EAAEhD,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,eAAe,EAAE,KAAKwB,KAAL,CAAWyC,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,qBAAD;AAAuB,QAAA,UAAU,EAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAED,OAAO,CAAC7C,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKS,KAAL,CAAWC,KAAX,GACG,mBADH,GAEG,KAAKD,KAAL,CAAWkC,eAAX,GACA,KAAKlC,KAAL,CAAWkC,eADX,GAEA,KAAKtC,KAAL,CAAW2B,MAAX,GACA,KAAK3B,KAAL,CAAW2B,MADX,GAEA,eAPN,CADF,CADF,EAYE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEa,OAAO,CAAC7D,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKyB,KAAL,CAAWE,UAAX,CAAsBoC,GAAtB,CAA0B,UAACnB,SAAD,EAAYH,KAAZ,EAAsB;AAC/C,eACE;AAAS,UAAA,GAAG,EAAEA,KAAd;AAAqB,UAAA,SAAS,EAAEoB,OAAO,CAACzD,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGwC,SAAS,CAAChB,IAAV,KAAmB,QAAnB,GACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,aAAD;AACE,UAAA,GAAG,EAAEa,KADP;AAEE,UAAA,OAAO,EAAEoB,OAFX;AAGE,UAAA,SAAS,EAAEjB,SAHb;AAIE,UAAA,KAAK,EAAEH,KAJT;AAKE,UAAA,YAAY,EAAE,MAAI,CAACnB,YALrB;AAME,UAAA,OAAO,EAAEuB,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EASGD,SAAS,CAACb,QAAV,IACDU,KAAK,GAAG,CAAR,GAAY,MAAI,CAAChB,KAAL,CAAWE,UAAX,CAAsBY,MADjC,GAEC,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAEsB,OAAO,CAACtD,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AACE,UAAA,KAAK,EACHqC,SAAS,CAACX,OAAV,CAAkBkB,KADf,CACqB;AAF5B;AAIE,UAAA,QAAQ,EAAE,kBAAAa,CAAC;AAAA,mBACT,MAAI,CAAC1C,YAAL,CACEsB,SADF,EAEEH,KAFF,EAGEuB,CAAC,CAACC,MAAF,CAASjC,KAHX,EAIE,SAJF,CADS;AAAA,WAJb;AAYE,UAAA,UAAU,EAAE;AACVkC,YAAAA,IAAI,EAAE,SADI;AAEVC,YAAAA,EAAE,EAAE;AAFM,WAZd;AAgBE,UAAA,MAAM,MAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAkBGC,KAAK,CAACC,IAAN,CAAW3E,YAAY,CAAC4E,MAAb,EAAX,EAAkCP,GAAlC,CACC,UAAA9B,OAAO,EAAI;AACT,iBACE;AACE,YAAA,KAAK,EAAEA,OAAO,CAACkB,KADjB;AAEE,YAAA,GAAG,EAAElB,OAAO,CAACkB,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIGlB,OAAO,CAACkB,KAJX,CADF;AAQD,SAVF,CAlBH,CADF,CAFD,GAmCG,IA5CN,CADD,GAgDC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,iBAAD;AACE,UAAA,OAAO,EAAEN,OADX;AAEE,UAAA,OAAO,EAAEgB,OAFX;AAGE,UAAA,iBAAiB,EAAEjB,SAAS,CAACjB,UAH/B;AAIE,UAAA,QAAQ,EAAE,kBAAA4C,kBAAkB,EAAI;AAC9B;AACA,YAAA,MAAI,CAAC9C,KAAL,CAAWE,UAAX,CACEc,KADF,EAEEd,UAFF,GAEe4C,kBAFf;;AAGA,YAAA,MAAI,CAACnC,iBAAL,CAAuB,MAAI,CAACX,KAAL,CAAWE,UAAlC;AACD,WAVH;AAWE,UAAA,QAAQ,EAAE,IAXZ;AAYE,UAAA,MAAM,EAAE,kBAZV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAeGc,KAAK,GAAG,CAAR,GAAY,MAAI,CAAChB,KAAL,CAAWE,UAAX,CAAsBY,MAAlC,GACC,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAEsB,OAAO,CAACtD,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AACE,UAAA,KAAK,EACHqC,SAAS,CAACX,OAAV,CAAkBkB,KADf,CACqB;AAF5B;AAIE,UAAA,QAAQ,EAAE,kBAAAa,CAAC;AAAA,mBACT,MAAI,CAAC1C,YAAL,CACEsB,SADF,EAEEH,KAFF,EAGEuB,CAAC,CAACC,MAAF,CAASjC,KAHX,EAIE,SAJF,CADS;AAAA,WAJb;AAYE,UAAA,UAAU,EAAE;AACVkC,YAAAA,IAAI,EAAE,SADI;AAEVC,YAAAA,EAAE,EAAE;AAFM,WAZd;AAgBE,UAAA,MAAM,MAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAkBGC,KAAK,CAACC,IAAN,CAAW3E,YAAY,CAAC4E,MAAb,EAAX,EAAkCP,GAAlC,CACC,UAAA9B,OAAO,EAAI;AACT,iBACE;AACE,YAAA,KAAK,EAAEA,OAAO,CAACkB,KADjB;AAEE,YAAA,GAAG,EAAElB,OAAO,CAACkB,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIGlB,OAAO,CAACkB,KAJX,CADF;AAQD,SAVF,CAlBH,CADF,CADD,GAkCG,IAjDN,CAjDJ,EAsGE,oBAAC,MAAD;AACE,UAAA,OAAO,EAAE,UADX;AAEE,wBAAW,QAFb;AAGE,UAAA,SAAS,EAAEU,OAAO,CAACvD,MAHrB;AAIE,UAAA,OAAO,EAAE,mBAAM;AACb,YAAA,MAAI,CAACkE,eAAL,CAAqB/B,KAArB;AACD,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQG,GARH,CAtGF,CADF;AAmHD,OApHA,CADH,CADF,CAZF,EAqIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArIF,EAsIE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,UADX;AAEE,sBAAW,WAFb;AAGE,QAAA,SAAS,EAAEoB,OAAO,CAACvD,MAHrB;AAIE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACmE,qBAAL;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG,KARH,CADF,EAWE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,UADX;AAEE,sBAAW,KAFb;AAGE,QAAA,SAAS,EAAEZ,OAAO,CAACvD,MAHrB;AAIE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACoE,eAAL;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG,GARH,CAXF,EAqBG,CAAC,KAAKrD,KAAL,CAAWsD,QAAZ,IACC,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAE,KAAKlD,KAAL,CAAWC,KADvB;AAEE,QAAA,OAAO,EAAE,UAFX;AAGE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACL,KAAL,CAAWuD,kBAAX,CAA8B,MAAI,CAACnD,KAAL,CAAWkC,eAAzC,CADO;AAAA,SAHX;AAME,QAAA,IAAI,EAAC,OANP;AAOE,QAAA,KAAK,EAAC,SAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtBJ,CAtIF,CADF,CADF;AA8KD;;;;;;;;;;;EAtV6BnE,S;;AAyVhC4B,iBAAiB,CAACyD,SAAlB,GAA8B;AAC5B;;AAEAhC,EAAAA,OAAO,EAAEvD,SAAS,CAACwF,OAAV,CACPxF,SAAS,CAACyF,KAAV,CAAgB;AACd/B,IAAAA,MAAM,EAAE1D,SAAS,CAAC0F,MAAV,CAAiBC,UADX;AAEd3B,IAAAA,QAAQ,EAAEhE,SAAS,CAAC0F,MAAV,CAAiBC,UAFb;AAGdhC,IAAAA,QAAQ,EAAE3D,SAAS,CAAC4F,KAAV,CAAgB,CACxB,QADwB,EAExB,QAFwB,EAGxB,MAHwB,EAIxB,UAJwB,EAKxB,MALwB,EAMxB,SANwB,CAAhB,CAHI;AAWdC,IAAAA,QAAQ,EAAE7F,SAAS,CAAC8F,IAXN,CAWW;;AAXX,GAAhB,CADO,EAcPH,UAjB0B;;AAkB5B;AACAjC,EAAAA,MAAM,EAAE1D,SAAS,CAAC0F,MAnBU;;AAoB5B;AACAJ,EAAAA,kBAAkB,EAAEtF,SAAS,CAAC+F,IArBF;;AAsB5B;AACAvB,EAAAA,aAAa,EAAExE,SAAS,CAAC8F;AAvBG,CAA9B;AA0BAhE,iBAAiB,CAACkE,YAAlB,GAAiC;AAC/BxB,EAAAA,aAAa,EAAE;AADgB,CAAjC,C,CAIA;;eACgB1C,iBAAiB,GAAGjC,UAAU,CAACW,MAAD,EAAS;AAAEyF,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAClCnE,iBADkC,C;;AAApC;;;;;;;;;;;;0BArZMtB,M;0BA6BAsB,iB","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport ConditionLine from \"./ConditionLine\";\nimport { operandTypes, operatorTypes } from \"./Settings\";\nimport { MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"column\"\n  },\n  conditionSection: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  button: {\n    //margin: theme.spacing.unit / 2\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15)\n  }\n});\n\nclass LogiFilterBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    if (props.preLoadConditions) {\n      this.state = {\n        Error: false,\n        conditions: props.preLoadConditions\n      };\n    } else {\n      this.state = {\n        conditions: [\n          {\n            Error: false,\n            type: \"Simple\",\n            column: undefined,\n            operator: undefined,\n            value: undefined,\n            operand: operandTypes.get(\"AND\")\n          }\n        ]\n      };\n    }\n  }\n\n  addNewCondition() {\n    let conditions = [...this.state.conditions];\n    conditions.push({\n      type: \"Simple\",\n      column: undefined,\n      operator: undefined,\n      value: undefined,\n      operand: operandTypes.get(\"AND\")\n    });\n    this.validateAndCreate(conditions);\n  }\n\n  addNewNestedCondition() {\n    let conditions = [...this.state.conditions];\n    // @ts-ignore\n    conditions.push({\n      type: \"Nested\",\n      conditions: [\n        {\n          type: \"Simple\",\n          column: undefined,\n          operator: undefined,\n          value: undefined,\n          operand: operandTypes.get(\"AND\")\n        }\n      ],\n      operand: operandTypes.get(\"AND\")\n    });\n    this.validateAndCreate(conditions);\n  }\n\n  removeCondition(conditionIndex) {\n    let conditions = [...this.state.conditions];\n    conditions.splice(conditionIndex, 1);\n    if (conditions.length > 0) {\n      this.validateAndCreate(conditions);\n    } //case user remove the last condition => we'll add one empty condition\n    else {\n      this.validateAndCreate([\n        {\n          type: \"Simple\",\n          column: undefined,\n          operator: undefined,\n          value: undefined,\n          operand: operandTypes.get(\"AND\")\n        }\n      ]);\n    }\n  }\n\n  handleChange(\n    selectedColumn,\n    index,\n    value,\n    changeType,\n    translateValue = null\n  ) {\n    let conditions = [...this.state.conditions];\n    let condition;\n    if (changeType === \"column\")\n      condition = {\n        ...selectedColumn,\n        column: this.props.columns.filter(c => c.header === value)[0]\n      };\n    else if (changeType === \"operator\")\n      condition = {\n        ...selectedColumn,\n        operator: operatorTypes\n          .get(selectedColumn.column.dataType)\n          .filter(opt => opt.Label === value)[0]\n      };\n    else if (changeType === \"value\")\n      condition = {\n        ...selectedColumn,\n        value: { value: value, translateValue: translateValue }\n      };\n    else if (changeType === \"operand\")\n      condition = {\n        ...selectedColumn,\n        operand: operandTypes.get(value)\n      };\n    conditions[index] = condition;\n    this.validateAndCreate(conditions);\n  }\n\n  validate(conditions) {\n    var isValid = true;\n    var filter = \"\";\n    var index = 0;\n    conditions.forEach(c => {\n      if (c.type === \"Simple\") {\n        isValid =\n          isValid &&\n          (c.column &&\n            c.column.accessor &&\n            c.operator &&\n            c.operator.TranslateTo &&\n            c.value &&\n            c.value.translateValue !== undefined &&\n            c.value.value !== undefined &&\n            c.value.value !== \"\");\n\n        if (isValid) {\n          filter =\n            filter +\n            `${c.column.accessor} ${c.operator.TranslateTo} ${\n              c.value.translateValue\n            } ${index + 1 < conditions.length ? c.operand.TranslateTo : \"\"}`;\n        }\n      } else {\n        var returnedObj = this.validate(c.conditions);\n        isValid = isValid && returnedObj.isValid;\n        filter =\n          filter +\n          ` (  ${returnedObj.filter} )  ${\n            index + 1 < conditions.length ? c.operand.TranslateTo : \"\"\n          }`;\n      }\n      index++;\n    });\n    return { isValid, filter };\n  }\n\n  validateAndCreate(conditions) {\n    //validate\n    var { isValid, filter } = this.validate(conditions);\n    //console.log(isValid);\n\n    this.setState({\n      Error: !isValid, //\"Please fix errors highlighted red and try again\",\n      conditions,\n      filterStatement: filter\n    });\n\n    //in case of nested changes this will update the parent conditions\n    if (this.props.onChange) {\n      this.props.onChange(conditions);\n    }\n  }\n\n  render() {\n    var { classes, columns } = this.props;\n\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <ExpansionPanel defaultExpanded={this.props.startExpanded}>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>\n              {this.state.Error\n                ? \"Please fix errors\"\n                : this.state.filterStatement\n                ? this.state.filterStatement\n                : this.props.header\n                ? this.props.header\n                : \"Create Filter\"}\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <div className={classes.root}>\n              {this.state.conditions.map((condition, index) => {\n                return (\n                  <section key={index} className={classes.conditionSection}>\n                    {condition.type === \"Simple\" ? (\n                      <React.Fragment>\n                        <ConditionLine\n                          key={index}\n                          classes={classes}\n                          condition={condition}\n                          index={index}\n                          handleChange={this.handleChange}\n                          columns={columns}\n                        />\n                        {condition.operator &&\n                        index + 1 < this.state.conditions.length ? (\n                          <FormControl className={classes.formControl}>\n                            <Select\n                              value={\n                                condition.operand.Label //default must be AND\n                              }\n                              onChange={e =>\n                                this.handleChange(\n                                  condition,\n                                  index,\n                                  e.target.value,\n                                  \"operand\"\n                                )\n                              }\n                              inputProps={{\n                                name: \"operand\",\n                                id: \"operand-select\"\n                              }}\n                              native\n                            >\n                              {Array.from(operandTypes.values()).map(\n                                operand => {\n                                  return (\n                                    <option\n                                      value={operand.Label}\n                                      key={operand.Label}\n                                    >\n                                      {operand.Label}\n                                    </option>\n                                  );\n                                }\n                              )}\n                            </Select>\n                          </FormControl>\n                        ) : null}\n                      </React.Fragment>\n                    ) : (\n                      <React.Fragment>\n                        <LogiFilterBuilder\n                          columns={columns}\n                          classes={classes}\n                          preLoadConditions={condition.conditions}\n                          onChange={newInnerConditions => {\n                            //on purpose doing it like this to avoid re render (?!)\n                            this.state.conditions[\n                              index\n                            ].conditions = newInnerConditions;\n                            this.validateAndCreate(this.state.conditions);\n                          }}\n                          isNested={true}\n                          header={\"Nested Condition\"}\n                        />\n                        {index + 1 < this.state.conditions.length ? (\n                          <FormControl className={classes.formControl}>\n                            <Select\n                              value={\n                                condition.operand.Label //default must be AND\n                              }\n                              onChange={e =>\n                                this.handleChange(\n                                  condition,\n                                  index,\n                                  e.target.value,\n                                  \"operand\"\n                                )\n                              }\n                              inputProps={{\n                                name: \"operand\",\n                                id: \"operand-select\"\n                              }}\n                              native\n                            >\n                              {Array.from(operandTypes.values()).map(\n                                operand => {\n                                  return (\n                                    <option\n                                      value={operand.Label}\n                                      key={operand.Label}\n                                    >\n                                      {operand.Label}\n                                    </option>\n                                  );\n                                }\n                              )}\n                            </Select>\n                          </FormControl>\n                        ) : null}\n                      </React.Fragment>\n                    )}\n\n                    <Button\n                      variant={\"outlined\"}\n                      aria-label=\"Remove\"\n                      className={classes.button}\n                      onClick={() => {\n                        this.removeCondition(index);\n                      }}\n                    >\n                      {\"-\"}\n                    </Button>\n                  </section>\n                );\n              })}\n            </div>\n          </ExpansionPanelDetails>\n          <Divider />\n          <ExpansionPanelActions>\n            <Button\n              variant={\"outlined\"}\n              aria-label=\"AddNested\"\n              className={classes.button}\n              onClick={() => {\n                this.addNewNestedCondition();\n              }}\n            >\n              {\"+()\"}\n            </Button>\n            <Button\n              variant={\"outlined\"}\n              aria-label=\"Add\"\n              className={classes.button}\n              onClick={() => {\n                this.addNewCondition();\n              }}\n            >\n              {\"+\"}\n            </Button>\n            {!this.props.isNested && (\n              <Button\n                disabled={this.state.Error}\n                variant={\"outlined\"}\n                onClick={() =>\n                  this.props.getFilterStatement(this.state.filterStatement)\n                }\n                size=\"small\"\n                color=\"primary\"\n              >\n                Apply\n              </Button>\n            )}\n          </ExpansionPanelActions>\n        </ExpansionPanel>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n\nLogiFilterBuilder.propTypes = {\n  /** Array of Objects defining columns\n   * {header, accessor, dataType, isReadOnly, isHidden}*/\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      header: PropTypes.string.isRequired,\n      accessor: PropTypes.string.isRequired,\n      dataType: PropTypes.oneOf([\n        \"String\",\n        \"Number\",\n        \"Date\",\n        \"DateTime\",\n        \"Time\",\n        \"Boolean\"\n      ]),\n      isHidden: PropTypes.bool //if not available will be shown\n    })\n  ).isRequired,\n  /** Text instead of \"Create Filter\" being used for nested filters internally */\n  header: PropTypes.string,\n  /** Clicking on Apply will call this function and return the created filter (Where clause) */\n  getFilterStatement: PropTypes.func,\n  /** Send true if you want the expansion panel to be open */\n  startExpanded: PropTypes.bool\n};\n\nLogiFilterBuilder.defaultProps = {\n  startExpanded: false\n};\n\n//exporting like this so Docz will pick the props!\nexport default (LogiFilterBuilder = withStyles(styles, { withTheme: true })(\n  LogiFilterBuilder\n));\n"]}]}