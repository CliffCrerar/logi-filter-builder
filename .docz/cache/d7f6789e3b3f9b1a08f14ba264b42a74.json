{"remainingRequest":"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/src/ValueInput.js","dependencies":[{"path":"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/src/ValueInput.js","mtime":1542129374524},{"path":"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/src/ValueInput.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { TimePicker } from \"material-ui-pickers\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport { DateTimePicker } from \"material-ui-pickers\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ArrowForward from \"@material-ui/icons/ArrowForward\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport { Value2SQLValue } from \"./Value2SQLValue\";\n\nfunction ValueInput(props) {\n  var classes = props.classes,\n      conditionColumn = props.conditionColumn,\n      conditionColumnIndex = props.conditionColumnIndex,\n      handleChange = props.handleChange;\n\n  var onDateInputChange = function onDateInputChange(date) {\n    return props.handleChange(conditionColumn, conditionColumnIndex, date, \"value\", Value2SQLValue.get(props.dataType)(date));\n  };\n\n  switch (props.dataType) {\n    case \"Date\":\n      return React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        error: !(conditionColumn.value && conditionColumn.value.value),\n        autoOk: true,\n        value: conditionColumn.value && conditionColumn.value.value ? conditionColumn.value.value : new Date(),\n        onChange: onDateInputChange,\n        rightArrowIcon: React.createElement(ArrowForward, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }),\n        leftArrowIcon: React.createElement(ArrowBack, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n\n    case \"DateTime\":\n      return React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(DateTimePicker, {\n        error: !(conditionColumn.value && conditionColumn.value.value),\n        autoOk: true,\n        value: conditionColumn.value && conditionColumn.value.value ? conditionColumn.value.value : new Date(),\n        onChange: onDateInputChange,\n        rightArrowIcon: React.createElement(ArrowForward, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }),\n        leftArrowIcon: React.createElement(ArrowBack, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n\n    case \"Time\":\n      return React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(TimePicker, {\n        error: !(conditionColumn.value && conditionColumn.value.value),\n        autoOk: true,\n        value: conditionColumn.value && conditionColumn.value.value ? conditionColumn.value.value : new Date(),\n        onChange: onDateInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n\n    case \"Number\":\n      return React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"standard-dense\",\n        type: \"number\",\n        className: classes.textField,\n        error: !(conditionColumn.value && conditionColumn.value.value),\n        value: conditionColumn.value ? conditionColumn.value.value : \"\",\n        onChange: function onChange(e) {\n          return handleChange(conditionColumn, conditionColumnIndex, e.target.value, \"value\", Value2SQLValue.get(props.dataType)(e.target.value));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n\n    case \"Boolean\":\n      return React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onChange: function onChange(e) {\n          return handleChange(conditionColumn, conditionColumnIndex, e.target.checked, \"value\", Value2SQLValue.get(props.dataType)(e.target.checked));\n        },\n        checked: conditionColumn.value ? conditionColumn.value.value : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n\n    default:\n      return React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"standard-dense\",\n        className: classes.textField,\n        error: !(conditionColumn.value && conditionColumn.value.value),\n        value: conditionColumn.value ? conditionColumn.value.value : \"\",\n        onChange: function onChange(e) {\n          return handleChange(conditionColumn, conditionColumnIndex, e.target.value, \"value\", Value2SQLValue.get(props.dataType)(e.target.value));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n  }\n}\n\nvar _default = ValueInput;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ValueInput, \"ValueInput\", \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/src/ValueInput.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/src/ValueInput.js\");\n  leaveModule(module);\n})();\n\n;\nValueInput.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ValueInput\"\n};",{"version":3,"sources":["/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-filter-builder/src/ValueInput.js"],"names":["React","FormControl","TextField","TimePicker","DatePicker","DateTimePicker","Checkbox","ArrowForward","ArrowBack","Value2SQLValue","ValueInput","props","classes","conditionColumn","conditionColumnIndex","handleChange","onDateInputChange","date","get","dataType","formControl","value","Date","textField","e","target","checked"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { TimePicker } from \"material-ui-pickers\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport { DateTimePicker } from \"material-ui-pickers\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ArrowForward from \"@material-ui/icons/ArrowForward\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport { Value2SQLValue } from \"./Value2SQLValue\";\n\nfunction ValueInput(props) {\n  var { classes, conditionColumn, conditionColumnIndex, handleChange } = props;\n  const onDateInputChange = date =>\n    props.handleChange(\n      conditionColumn,\n      conditionColumnIndex,\n      date,\n      \"value\",\n      Value2SQLValue.get(props.dataType)(date)\n    );\n  switch (props.dataType) {\n    case \"Date\":\n      return (\n        <FormControl className={classes.formControl}>\n          <DatePicker\n            error={!(conditionColumn.value && conditionColumn.value.value)}\n            autoOk={true}\n            value={\n              conditionColumn.value && conditionColumn.value.value\n                ? conditionColumn.value.value\n                : new Date()\n            }\n            onChange={onDateInputChange}\n            rightArrowIcon={<ArrowForward />}\n            leftArrowIcon={<ArrowBack />}\n          />\n        </FormControl>\n      );\n    case \"DateTime\":\n      return (\n        <FormControl className={classes.formControl}>\n          <DateTimePicker\n            error={!(conditionColumn.value && conditionColumn.value.value)}\n            autoOk={true}\n            value={\n              conditionColumn.value && conditionColumn.value.value\n                ? conditionColumn.value.value\n                : new Date()\n            }\n            onChange={onDateInputChange}\n            rightArrowIcon={<ArrowForward />}\n            leftArrowIcon={<ArrowBack />}\n          />\n        </FormControl>\n      );\n    case \"Time\":\n      return (\n        <FormControl className={classes.formControl}>\n          <TimePicker\n            error={!(conditionColumn.value && conditionColumn.value.value)}\n            autoOk={true}\n            value={\n              conditionColumn.value && conditionColumn.value.value\n                ? conditionColumn.value.value\n                : new Date()\n            }\n            onChange={onDateInputChange}\n          />\n        </FormControl>\n      );\n    case \"Number\":\n      return (\n        <FormControl className={classes.formControl}>\n          <TextField\n            id=\"standard-dense\"\n            type={\"number\"}\n            className={classes.textField}\n            error={!(conditionColumn.value && conditionColumn.value.value)}\n            value={conditionColumn.value ? conditionColumn.value.value : \"\"}\n            onChange={e =>\n              handleChange(\n                conditionColumn,\n                conditionColumnIndex,\n                e.target.value,\n                \"value\",\n                Value2SQLValue.get(props.dataType)(e.target.value)\n              )\n            }\n          />\n        </FormControl>\n      );\n    case \"Boolean\":\n      return (\n        <FormControl className={classes.formControl}>\n          <Checkbox\n            onChange={e =>\n              handleChange(\n                conditionColumn,\n                conditionColumnIndex,\n                e.target.checked,\n                \"value\",\n                Value2SQLValue.get(props.dataType)(e.target.checked)\n              )\n            }\n            checked={conditionColumn.value ? conditionColumn.value.value : \"\"}\n          />\n        </FormControl>\n      );\n    default:\n      return (\n        <FormControl className={classes.formControl}>\n          <TextField\n            id=\"standard-dense\"\n            className={classes.textField}\n            error={!(conditionColumn.value && conditionColumn.value.value)}\n            value={conditionColumn.value ? conditionColumn.value.value : \"\"}\n            onChange={e =>\n              handleChange(\n                conditionColumn,\n                conditionColumnIndex,\n                e.target.value,\n                \"value\",\n                Value2SQLValue.get(props.dataType)(e.target.value)\n              )\n            }\n          />\n        </FormControl>\n      );\n  }\n}\n\nexport default ValueInput;\n"]}]}